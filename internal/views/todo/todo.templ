package todo_view

import "go-todo/internal/database"
import "fmt"


templ TodoView(data []database.Todo){
<div class="w-screen">
	<h1 class="text-3xl font-bold text-center mt-4">Todo List</h1>
	<div class="flex gap-5 justify-center my-2">
		<a hx-get="/todo/form" hx-trigger="click" 
		hx-target="#todo-form" 
		hx-swap="innerHTML" 
		class="hover:cursor-pointer bg-blue-500 text-white px-4 py-2 rounded">Create</a>
		<a
		hx-get="/todo"
		hx-trigger="click"
		hx-target="#main-content"
		class="hover:cursor-pointer bg-blue-500 text-white px-4 py-2 rounded">Refresh</a>
	</div>
	<div id="todo-form">
	</div>
	<div class="mt-4">
		if len(data) == 0{
			<p class="text-red-500 text-center">No todo found. <br /> Create a todo </p>
} else {
	<div class="mx-[20%] border-[1px] border-gray-300 p-4 rounded-md">
	for index, todo := range data {
<div class="flex gap-3 items-center my-2">
    <p class="bg-blue-500 rounded-[50%] w-[40px] h-[40px] align-middle text-center p-2 text-md text-white">
        { fmt.Sprintf("%d", index+1) }
    </p>
    <div class="flex-grow"> <!-- Use flex-grow to allow the div to grow and take up available space -->
        <h1 class="font-semibold text-lg">{todo.Title}</h1>
        <p class="text-sm">{ fmt.Sprintf("%v", todo.Content.String) }</p>
        if todo.IsDone {
            <p class="text-green-600">Done</p>
			} else {
            <p class="text-amber-500">Pending</p>
       	}
    </div>
    <!-- delete button pushed to the right -->
    <div class="self-end justify-items-end">
	<button type="button"
	 class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-3 rounded ">
        Edit
    </button>
	<button type="button"
	hx-confirm="Are you sure you want to delete this todo?"
	hx-delete={ fmt.Sprintf("/todo/delete/%d", todo.ID) }
	hx-target="#main-content"
	hx-trigger="click"
	 class="bg-red-500 hover:bg-red-700 text-white py-1 px-3 rounded ">
        Delete
    </button>
		
	</div>
</div>
<!-- divider at the bottom -->
<div class="border-t-2 my-1"></div>
	}
</div>
}
	</div>
</div>
	

}